name: Release
on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  # terraform:
  #   name: Execute Terraform
  #   runs-on: ubuntu-latest

  #   defaults:
  #     run:
  #       working-directory: configs/terraform

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v5

  #     - name: Set up WARP
  #       uses: fscarmen/warp-on-actions@v1.3
  #       with:
  #         mode: client

  #     - name: Setup terraform
  #       uses: hashicorp/setup-terraform@v3
  #       with:
  #         terraform_version: ~1.0

  #     - name: Terraform Init
  #       run: terraform init -backend-config="conn_str=postgres://${{ secrets.TF_STATE_DB_USERNAME }}:${{ secrets.TF_STATE_DB_PASSWORD }}@${{ secrets.TF_STATE_DB_HOST }}:${{ secrets.TF_STATE_DB_PORT }}/${{ secrets.TF_STATE_DB_NAME }}?sslmode=disable"

  #     - name: Terraform Apply
  #       id: apply
  #       run: terraform apply -auto-approve -input=false
  #       env:
  #         TF_WORKSPACE: prod
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  migration:
    name: DB migration
    runs-on: ubuntu-latest
    # needs: [terraform]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up WARP
        uses: fscarmen/warp-on-actions@v1.3
        with:
          mode: client

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Migrate
        run: pip install yoyo-migrations "psycopg[binary]" && make migrate
        env:
          DB_USER: ${{ secrets.PROD_DB_USER }}
          DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          DB_HOST: ${{ secrets.PROD_DB_HOST }}
          DB_NAME: ${{ secrets.PROD_DB_NAME }}
          DB_SCHEMA: ${{ secrets.PROD_DB_SCHEMA }}
          DB_PORT: ${{ secrets.PROD_DB_PORT }}

  deploy:
    name: Deploy API
    runs-on: ubuntu-latest
    environment: production
    needs: [migration]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy api
        run: |
          flyctl deploy --now -a prod-euromillions-api \
            -i ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/euromillions-api:${{ github.sha }} \
            -e EUROMILLIONS_MIN_YEAR=2004 \
            -e EUROMILLIONS_WEB_BASE_URL=https://www.euro-millions.com \
            -e FLASK_APP=euromillions_api \
            -e FLASK_DEBUG=false \
            -e DB_SCHEMA=${{ secrets.PROD_DB_SCHEMA }}
